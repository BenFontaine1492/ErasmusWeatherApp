
services:
  #frontend:
  #    build:
  #      context: .
  #      dockerfile: ./docker/nginx/Dockerfile
  #    volumes:
  #      - ./index.html:/usr/share/nginx/html/index.html
  #      - ./vendor:/usr/share/nginx/html/vendor
  #      - ./frontend:/usr/share/nginx/html/frontend
  #      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #    ports:
  #      - "8080:80"
  #    depends_on:
  #      - php
        
  php:
    container_name: php
    build:
      context: .
      dockerfile: ./docker/php-api/Dockerfile
    volumes:
      - ./src:/usr/share/nginx/html/project
    ports:
      - "8081:80"
    depends_on:
      - db

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8082:8080"
    environment:
      - SWAGGER_JSON=/swagger/openapi.yaml
    volumes:
      - ./docs/swagger:/swagger

  mqtt-subscriber:
    container_name: mqtt-subscriber
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    ports:
      - "8083:80"
    depends_on:
      - db
    restart: always

  db:
    image: influxdb:2.7
    container_name: db
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=your-org
      - DOCKER_INFLUXDB_INIT_BUCKET=weather
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=your-token

  backup:
    build:
      context: .
      dockerfile: ./docker/db-backup/Dockerfile
    container_name: db-backup
    volumes:
      - influxdb-data:/var/lib/influxdb2 # Zugriff auf Datenbankvolumen
      - ./backup:/backup               # Backups auf Host speichern
    depends_on:
      - db
    environment:
      - INFLUX_TOKEN=your-token # Token zur Authentifizierung
    restart: always

volumes:
    influxdb-data:
